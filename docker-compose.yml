services:
  web:
    build: ./app/backend/
    ports:
     - "8000:80"
    networks:
      - app-network
    volumes:
     - ./app/backend/src:/app/backend/src
    depends_on:
      - mongo_db
    environment:
      - MONGO_DB_CUSTOMER_FEEDBACK=${MONGO_INITDB_DATABASE}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_COLLECTION_PORTAL_DA_QUEIXA=${MONGO_COLLECTION_PORTAL_DA_QUEIXA}
      - MONGO_PRINCIPAL_USER=${MONGO_PRINCIPAL_USER}
      - MONGO_PRINCIPAL_PASSWORD=${MONGO_PRINCIPAL_PASSWORD}
      - PROXY=${PROXY}
      - URL_PORTAL_DA_QUEIXA_COMPLAINTS=${URL_PORTAL_DA_QUEIXA_COMPLAINTS}
      - USE_CLOUD_LLM=${USE_CLOUD_LLM}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GEMINI_MODEL_NAME=${GEMINI_MODEL_NAME}
      - OLLAMA_MODEL_NAME=${OLLAMA_MODEL_NAME}
      - ARG_TEMPERASTURE=${ARG_TEMPERASTURE}
      - ARG_TIMEOUT=${ARG_TIMEOUT}
      - PYTHONPYCACHE=${PYTHONPYCACHE}
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}

  mongo_db:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - ./app/mongo_db/mongo_data:/data/db
      - ./app/mongo_db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ./app/mongo_db/configdb:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_COLLECTION_PORTAL_DA_QUEIXA=${MONGO_COLLECTION_PORTAL_DA_QUEIXA}
      - MONGO_PRINCIPAL_USER=${MONGO_PRINCIPAL_USER}
      - MONGO_PRINCIPAL_PASSWORD=${MONGO_PRINCIPAL_PASSWORD}

  ollama:
    build: ./app/ollama/
    ports:
      - "11434:11434"
    networks:
      - app-network
    volumes:
      - ./app/ollama/.ollama:/root/.ollama
      #- ./app/ollama/certificates:/usr/local/share/ca-certificates/

  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    depends_on:
      - web
    networks:
      - app-network
    volumes:
      - ./app/frontend:/app/frontend
      - node_modules:/app/node_modules
      - ./public:/app/public

networks:
  app-network:
    driver: bridge

volumes:
  node_modules:
